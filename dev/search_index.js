var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference/API","page":"Reference/API","title":"Reference/API","text":"","category":"section"},{"location":"reference/","page":"Reference/API","title":"Reference/API","text":"Auto generated docs for all exported functions and types.","category":"page"},{"location":"reference/#Types","page":"Reference/API","title":"Types","text":"","category":"section"},{"location":"reference/","page":"Reference/API","title":"Reference/API","text":"Modules = [SpinAdaptedSecondQuantization]\nOrder = [:type]\nFilter = t -> !(t <: GeneralOrbital)\nPrivate = false","category":"page"},{"location":"reference/#Functions","page":"Reference/API","title":"Functions","text":"","category":"section"},{"location":"reference/","page":"Reference/API","title":"Reference/API","text":"Modules = [SpinAdaptedSecondQuantization]\nOrder = [:function]\nPrivate = false","category":"page"},{"location":"reference/#SpinAdaptedSecondQuantization.E-Tuple{Any, Any}","page":"Reference/API","title":"SpinAdaptedSecondQuantization.E","text":"E(p, q)\n\nConstructs an expression containing a single excitation operator.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SpinAdaptedSecondQuantization.delta-Tuple","page":"Reference/API","title":"SpinAdaptedSecondQuantization.delta","text":"delta(indices...)\n\nConstruct an expression consisting of a single Kronecker delta of the given indices.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SpinAdaptedSecondQuantization.δ-Tuple","page":"Reference/API","title":"SpinAdaptedSecondQuantization.δ","text":"δ(indices...)\n\nUnicode alias for delta.\n\n\n\n\n\n","category":"method"},{"location":"reference/#OrbitalSpaces","page":"Reference/API","title":"OrbitalSpaces","text":"","category":"section"},{"location":"reference/","page":"Reference/API","title":"Reference/API","text":"Modules = [SpinAdaptedSecondQuantization]\nOrder = [:type]\nFilter = t -> t <: GeneralOrbital\nPrivate = false","category":"page"},{"location":"reference/#SpinAdaptedSecondQuantization.GeneralOrbital","page":"Reference/API","title":"SpinAdaptedSecondQuantization.GeneralOrbital","text":"GeneralOrbital\n\nTop level supertype of all orbital spaces. Any orbital subspace is a subtype of this type.\n\n\n\n\n\n","category":"type"},{"location":"reference/#SpinAdaptedSecondQuantization.OccupiedOrbital","page":"Reference/API","title":"SpinAdaptedSecondQuantization.OccupiedOrbital","text":"OccupiedOrbital\n\nType representing all occupied orbitals.\n\n\n\n\n\n","category":"type"},{"location":"reference/#SpinAdaptedSecondQuantization.VirtualOrbital","page":"Reference/API","title":"SpinAdaptedSecondQuantization.VirtualOrbital","text":"VirtualOrbital\n\nType representing all virtual orbitals.\n\n\n\n\n\n","category":"type"},{"location":"#SpinAdaptedSecondQuantization.jl","page":"Home","title":"SpinAdaptedSecondQuantization.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SpinAdaptedSecondQuantization.jl is a Julia package for doing symbolic second quantization mainly targeted at quantum chemistry methods, such as post Hartree-Fock methods.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To install the package, run","category":"page"},{"location":"","page":"Home","title":"Home","text":"(v1.8) pkg> add https://github.com/MarcusTL12/SpinAdaptedSecondQuantization.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Julia version 1.8 or higher is required.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package can then be loaded","category":"page"},{"location":"","page":"Home","title":"Home","text":"using SpinAdaptedSecondQuantization","category":"page"},{"location":"","page":"Home","title":"Home","text":"using SpinAdaptedSecondQuantization","category":"page"},{"location":"","page":"Home","title":"Home","text":"DocTestSetup = quote\n  using SpinAdaptedSecondQuantization\n  SASQ.disable_color()\nend","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Example:","category":"page"},{"location":"","page":"Home","title":"Home","text":"E(1, 2) * occupied(2)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Another example:","category":"page"},{"location":"","page":"Home","title":"Home","text":"E(1, 2) * virtual(1)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Hartree-Fock energy expression:","category":"page"},{"location":"","page":"Home","title":"Home","text":"h = ∑(rsym_tensor(\"h\", 1, 2) * E(1, 2), 1:2)\ng = simplify(∑(rsym_tensor(\"g\", 1:4...) * e(1:4...), 1:4))\nH = h + g\nE_hf = simplify_heavy(act_on_ket(H, 0))","category":"page"},{"location":"internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Auto generated docs for functions and types that are not exported. Mostly for development use.","category":"page"},{"location":"internals/#Types","page":"Internals","title":"Types","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Modules = [SpinAdaptedSecondQuantization]\nOrder = [:type]\nPublic = false","category":"page"},{"location":"internals/#SpinAdaptedSecondQuantization.Constraints","page":"Internals","title":"SpinAdaptedSecondQuantization.Constraints","text":"Constraints = SortedDict{Int,Type}\n\nType alias for container of MO-Index constraints\n\n\n\n\n\n","category":"type"},{"location":"internals/#SpinAdaptedSecondQuantization.KroneckerDelta","page":"Internals","title":"SpinAdaptedSecondQuantization.KroneckerDelta","text":"KroneckerDelta\n\nType representing a Kronecker delta of two or more MO-indices.\n\n\n\n\n\n","category":"type"},{"location":"internals/#SpinAdaptedSecondQuantization.Operator","page":"Internals","title":"SpinAdaptedSecondQuantization.Operator","text":"Operator\n\nAbstact operator type which all concrete operator types (i.e. Epq, a†p) must extend.\n\n\n\n\n\n","category":"type"},{"location":"internals/#SpinAdaptedSecondQuantization.SingletExcitationOperator","page":"Internals","title":"SpinAdaptedSecondQuantization.SingletExcitationOperator","text":"SingletExcitationOperator\n\nThe basic E_pq type operator.\n\n\n\n\n\n","category":"type"},{"location":"internals/#SpinAdaptedSecondQuantization.Spin","page":"Internals","title":"SpinAdaptedSecondQuantization.Spin","text":"Spin\n\nEnum type to represent spin up (α) and down (β)\n\n\n\n\n\n","category":"type"},{"location":"internals/#Functions","page":"Internals","title":"Functions","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Modules = [SpinAdaptedSecondQuantization]\nOrder = [:function]\nPublic = false","category":"page"},{"location":"internals/#SpinAdaptedSecondQuantization.disable_color-Tuple{}","page":"Internals","title":"SpinAdaptedSecondQuantization.disable_color","text":"disable_color()\n\nDisables the coloring of MO-indices to indicate orbital space constraints. This will make all constraints be printed explicitly which can make some terms a bit long to read. Color is enabled by default.\n\n\n\n\n\n","category":"method"},{"location":"internals/#SpinAdaptedSecondQuantization.enable_color-Tuple{}","page":"Internals","title":"SpinAdaptedSecondQuantization.enable_color","text":"enable_color()\n\nEnables the coloring of MO-indices to indicate orbital space constraints. Color is enabled by default. Currently the coloring scheme is given by:     GeneralOrbital: colorless     OccupiedOrbital: green     VirtualOrbital: blue\n\n\n\n\n\n","category":"method"}]
}
